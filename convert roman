#include <stdio.h>
#include <string.h>

// Function to return value of a Roman numeral
int romanToInt(char *s) {
    int len = strlen(s);
    int result = 0;
    
    for (int i = 0; i < len; i++) {
        // Check for subtraction cases
        if (s[i] == 'I' && (s[i+1] == 'V' || s[i+1] == 'X')) {
            result -= 1;
        } else if (s[i] == 'X' && (s[i+1] == 'L' || s[i+1] == 'C')) {
            result -= 10;
        } else if (s[i] == 'C' && (s[i+1] == 'D' || s[i+1] == 'M')) {
            result -= 100;
        } else {
            // Add value of current symbol
            switch (s[i]) {
                case 'I':
                    result += 1;
                    break;
                case 'V':
                    result += 5;
                    break;
                case 'X':
                    result += 10;
                    break;
                case 'L':
                    result += 50;
                    break;
                case 'C':
                    result += 100;
                    break;
                case 'D':
                    result += 500;
                    break;
                case 'M':
                    result += 1000;
                    break;
                default:
                    printf("Invalid Roman numeral!\n");
                    return -1;  // Return -1 for invalid input
            }
        }
    }
    
    return result;
}

int main() {
    char romanNumeral[100];
    printf("Enter a Roman numeral: ");
    scanf("%s", romanNumeral);
    
    int result = romanToInt(romanNumeral);
    if (result != -1) {
        printf("The integer representation of the Roman numeral is: %d\n", result);
    }
    
    return 0;
}
